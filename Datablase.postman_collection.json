{
  "info": {
    "_postman_id": "12c1a47a-da12-43b4-bd17-a6a69d2fc12d",
    "name": "Datablase Tests",
    "description": "Automated testing for the Datablase API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "v1",
      "item": [
        {
          "name": "Events",
          "item": [
            {
              "name": "Query for game events.",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Conner hits dingers\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.count).greaterThan(180);\r",
                      "    pm.expect(jsonData.results.length).equals(jsonData.count);\r",
                      "    pm.variables.set(\"conner_dingers\", jsonData.count);\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v1/events?type=HOME_RUN&batterId=740d5fef-d59f-4dac-9a75-739ec07f91cf",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "events"],
                  "query": [
                    {
                      "key": "playerId",
                      "value": "<string>",
                      "description": "The ID of a player that must be the batter or the pitcher in each event.",
                      "disabled": true
                    },
                    {
                      "key": "gameId",
                      "value": "<string>",
                      "description": "The ID of the game by which to filter results.",
                      "disabled": true
                    },
                    {
                      "key": "pitcherId",
                      "value": "<string>",
                      "description": "The ID of the pitcher that must be in each event.",
                      "disabled": true
                    },
                    {
                      "key": "type",
                      "value": "HOME_RUN",
                      "description": "The type of event by which to filter."
                    },
                    {
                      "key": "outcomes",
                      "value": "<boolean>",
                      "description": "Include child player event records.",
                      "disabled": true
                    },
                    {
                      "key": "baseRunners",
                      "value": "<boolean>",
                      "description": "Include child base runner records.",
                      "disabled": true
                    },
                    {
                      "key": "sortBy",
                      "value": "<string>",
                      "description": "The field by which to sort. Most text and numeric columns are supported.",
                      "disabled": true
                    },
                    {
                      "key": "sortDirection",
                      "value": "<string>",
                      "description": "The direction by which to sort. Must be one of ASC, DESC.",
                      "disabled": true
                    },
                    {
                      "key": "batterId",
                      "value": "740d5fef-d59f-4dac-9a75-739ec07f91cf"
                    }
                  ]
                },
                "description": "Get the list of game events that match the query. One of `playerId`, `gameId`, `pitcherId`, `batterId` must be specified."
              },
              "response": [
                {
                  "name": "The events that match the query and the number of matching events.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/events?playerId=<string>&gameId=<string>&pitcherId=<string>&batterId=<string>&type=<string>&outcomes=<boolean>&baseRunners=<boolean>&sortBy=<string>&sortDirection=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "events"],
                      "query": [
                        {
                          "key": "playerId",
                          "value": "<string>"
                        },
                        {
                          "key": "gameId",
                          "value": "<string>"
                        },
                        {
                          "key": "pitcherId",
                          "value": "<string>"
                        },
                        {
                          "key": "batterId",
                          "value": "<string>"
                        },
                        {
                          "key": "type",
                          "value": "<string>"
                        },
                        {
                          "key": "outcomes",
                          "value": "<boolean>"
                        },
                        {
                          "key": "baseRunners",
                          "value": "<boolean>"
                        },
                        {
                          "key": "sortBy",
                          "value": "<string>"
                        },
                        {
                          "key": "sortDirection",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Calculate the number of events for each batter or pitcher.",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Same number of dingers\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.batters[0].count === pm.variables.get(\"conner_dingers\"))\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Over 100 pitchers dinged\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.pitchers.length).greaterThan(100);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v1/countByType?eventType=HOME_RUN&batterId=740d5fef-d59f-4dac-9a75-739ec07f91cf",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "countByType"],
                  "query": [
                    {
                      "key": "eventType",
                      "value": "HOME_RUN",
                      "description": "(Required) The type of event to count."
                    },
                    {
                      "key": "batterId",
                      "value": "740d5fef-d59f-4dac-9a75-739ec07f91cf",
                      "description": "The ID of the batter(s) by which to filter."
                    },
                    {
                      "key": "pitcherId",
                      "value": "<string>",
                      "description": "The ID of the pitcher(s) by which to filter.",
                      "disabled": true
                    }
                  ]
                },
                "description": "Get the number of events for a batter or pitcher with a certain `event_type`."
              },
              "response": [
                {
                  "name": "The number of events the batter was involved in with the specified type.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/countByType?eventType=<string>&batterId=<string>&pitcherId=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "countByType"],
                      "query": [
                        {
                          "key": "eventType",
                          "value": "<string>"
                        },
                        {
                          "key": "batterId",
                          "value": "<string>"
                        },
                        {
                          "key": "pitcherId",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Scorigami",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Over 375 sclorigamis\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    console.log(jsonData.length);",
                      "    pm.expect(jsonData.length).greaterThan(375);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v1/sclorigami",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "sclorigami"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Players",
          "item": [
            {
              "name": "playerInfo",
              "item": [
                {
                  "name": "playerInfo by Player ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/playerInfo?playerId=740d5fef-d59f-4dac-9a75-739ec07f91cf&all=true",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "playerInfo"],
                      "query": [
                        {
                          "key": "playerId",
                          "value": "740d5fef-d59f-4dac-9a75-739ec07f91cf"
                        },
                        {
                          "key": "all",
                          "value": "true"
                        },
                        {
                          "key": "name",
                          "value": "<string>",
                          "description": "The name of the player (takes precedence if slug is specified)",
                          "disabled": true
                        },
                        {
                          "key": "slug",
                          "value": "<string>",
                          "description": "The url_slug of the player",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "Get extended player info for a given player, given a player id, name, or slug."
                  },
                  "response": [
                    {
                      "name": "array of objects",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v1/playerInfo?playerId=<string>&name=<string>&slug=<string>&all=<boolean>",
                          "host": ["{{baseUrl}}"],
                          "path": ["v1", "playerInfo"],
                          "query": [
                            {
                              "key": "playerId",
                              "value": "<string>"
                            },
                            {
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "key": "slug",
                              "value": "<string>"
                            },
                            {
                              "key": "all",
                              "value": "<boolean>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "playerInfo by Name",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/playerInfo?name=Conner Haley&all=true",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "playerInfo"],
                      "query": [
                        {
                          "key": "playerId",
                          "value": "<string>",
                          "description": "The player ID of the player (takes precedence if other params are specified)",
                          "disabled": true
                        },
                        {
                          "key": "name",
                          "value": "Conner Haley",
                          "description": "The name of the player (takes precedence if slug is specified)"
                        },
                        {
                          "key": "slug",
                          "value": "<string>",
                          "description": "The url_slug of the player",
                          "disabled": true
                        },
                        {
                          "key": "all",
                          "value": "true",
                          "description": "(default:false) If true, all historical info for the player will be returned, rather than just the current info"
                        }
                      ]
                    },
                    "description": "Get extended player info for a given player, given a player id, name, or slug."
                  },
                  "response": [
                    {
                      "name": "array of objects",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v1/playerInfo?playerId=<string>&name=<string>&slug=<string>&all=<boolean>",
                          "host": ["{{baseUrl}}"],
                          "path": ["v1", "playerInfo"],
                          "query": [
                            {
                              "key": "playerId",
                              "value": "<string>"
                            },
                            {
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "key": "slug",
                              "value": "<string>"
                            },
                            {
                              "key": "all",
                              "value": "<boolean>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "playerInfo by Slug",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/playerInfo?all=true&slug=conner-haley",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "playerInfo"],
                      "query": [
                        {
                          "key": "playerId",
                          "value": "<string>",
                          "description": "The player ID of the player (takes precedence if other params are specified)",
                          "disabled": true
                        },
                        {
                          "key": "name",
                          "value": "<string>",
                          "description": "The name of the player (takes precedence if slug is specified)",
                          "disabled": true
                        },
                        {
                          "key": "all",
                          "value": "true",
                          "description": "(default:false) If true, all historical info for the player will be returned, rather than just the current info"
                        },
                        {
                          "key": "slug",
                          "value": "conner-haley"
                        }
                      ]
                    },
                    "description": "Get extended player info for a given player, given a player id, name, or slug."
                  },
                  "response": [
                    {
                      "name": "array of objects",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v1/playerInfo?playerId=<string>&name=<string>&slug=<string>&all=<boolean>",
                          "host": ["{{baseUrl}}"],
                          "path": ["v1", "playerInfo"],
                          "query": [
                            {
                              "key": "playerId",
                              "value": "<string>"
                            },
                            {
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "key": "slug",
                              "value": "<string>"
                            },
                            {
                              "key": "all",
                              "value": "<boolean>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"More than 1 result\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.length).greaterThan(1);",
                      "});",
                      ""
                    ]
                  }
                }
              ]
            },
            {
              "name": "playerIdsByName",
              "item": [
                {
                  "name": "playerIdsByName: Wyatt Mason",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"More than 10 results\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.length).greaterThan(10);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/playerIdsByName?name=Wyatt Mason&current=false",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "playerIdsByName"],
                      "query": [
                        {
                          "key": "name",
                          "value": "Wyatt Mason",
                          "description": "The name of the player"
                        },
                        {
                          "key": "current",
                          "value": "false",
                          "description": "If true, only players currently using this name will be returned"
                        }
                      ]
                    },
                    "description": "Get all player IDs matching a given name"
                  },
                  "response": [
                    {
                      "name": "Wyatt Mason",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v1/playerIdsByName?name=Wyatt Mason&current=false",
                          "host": ["{{baseUrl}}"],
                          "path": ["v1", "playerIdsByName"],
                          "query": [
                            {
                              "key": "name",
                              "value": "Wyatt Mason",
                              "description": "The name of the player"
                            },
                            {
                              "key": "current",
                              "value": "false",
                              "description": "If true, only players currently using this name will be returned"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Server",
                          "value": "nginx/1.19.1"
                        },
                        {
                          "key": "Date",
                          "value": "Sat, 28 Nov 2020 03:56:02 GMT"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8"
                        },
                        {
                          "key": "Content-Length",
                          "value": "2431"
                        },
                        {
                          "key": "Connection",
                          "value": "keep-alive"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "Express"
                        },
                        {
                          "key": "Access-Control-Allow-Origin",
                          "value": "*"
                        },
                        {
                          "key": "ETag",
                          "value": "W/\"97f-LVEvqdJXFDbfuURjGB1yAmWRUkY\""
                        }
                      ],
                      "cookie": [],
                      "body": "[\n    {\n        \"player_id\": \"0bb35615-63f2-4492-80ec-b6b322dc5450\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"0d5300f6-0966-430f-903f-a4c2338abf00\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:55:48.749Z\"\n    },\n    {\n        \"player_id\": \"1f159bab-923a-4811-b6fa-02bfde50925a\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"21d52455-6c2c-4ee4-8673-ab46b4b926b4\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"27c68d7f-5e40-4afa-8b6f-9df47b79e7dd\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"5ca7e854-dc00-4955-9235-d7fcd732ddcf\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"63df8701-1871-4987-87d7-b55d4f1df2e9\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T22:10:51.203Z\"\n    },\n    {\n        \"player_id\": \"75f9d874-5e69-438d-900d-a3fcb1d429b3\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:10:40.842Z\"\n    },\n    {\n        \"player_id\": \"80e474a3-7d2b-431d-8192-2f1e27162607\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-12T20:25:34.306Z\",\n        \"valid_until\": \"2020-08-12T20:40:36.879Z\"\n    },\n    {\n        \"player_id\": \"a1ed3396-114a-40bc-9ff0-54d7e1ad1718\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T20:55:38.256Z\"\n    },\n    {\n        \"player_id\": \"bf6a24d1-4e89-4790-a4ba-eeb2870cbf6f\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:40:45.977Z\"\n    },\n    {\n        \"player_id\": \"e16c3f28-eecd-4571-be1a-606bbac36b2b\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T20:55:38.256Z\"\n    },\n    {\n        \"player_id\": \"e4034192-4dc6-4901-bb30-07fe3cf77b5e\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"ea44bd36-65b4-4f3b-ac71-78d87a540b48\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:40:45.977Z\"\n    },\n    {\n        \"player_id\": \"f741dc01-2bae-4459-bfc0-f97536193eea\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    }\n]"
                    }
                  ]
                },
                {
                  "name": "playerIdsByName: Valid Player",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Single result\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.length).to.eql(1);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/playerIdsByName?name=Conner Haley&current=true",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "playerIdsByName"],
                      "query": [
                        {
                          "key": "name",
                          "value": "Conner Haley",
                          "description": "The name of the player"
                        },
                        {
                          "key": "current",
                          "value": "true",
                          "description": "If true, only players currently using this name will be returned"
                        }
                      ]
                    },
                    "description": "Get all player IDs matching a given name"
                  },
                  "response": [
                    {
                      "name": "Wyatt Mason",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v1/playerIdsByName?name=Wyatt Mason&current=false",
                          "host": ["{{baseUrl}}"],
                          "path": ["v1", "playerIdsByName"],
                          "query": [
                            {
                              "key": "name",
                              "value": "Wyatt Mason",
                              "description": "The name of the player"
                            },
                            {
                              "key": "current",
                              "value": "false",
                              "description": "If true, only players currently using this name will be returned"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Server",
                          "value": "nginx/1.19.1"
                        },
                        {
                          "key": "Date",
                          "value": "Sat, 28 Nov 2020 03:56:02 GMT"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8"
                        },
                        {
                          "key": "Content-Length",
                          "value": "2431"
                        },
                        {
                          "key": "Connection",
                          "value": "keep-alive"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "Express"
                        },
                        {
                          "key": "Access-Control-Allow-Origin",
                          "value": "*"
                        },
                        {
                          "key": "ETag",
                          "value": "W/\"97f-LVEvqdJXFDbfuURjGB1yAmWRUkY\""
                        }
                      ],
                      "cookie": [],
                      "body": "[\n    {\n        \"player_id\": \"0bb35615-63f2-4492-80ec-b6b322dc5450\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"0d5300f6-0966-430f-903f-a4c2338abf00\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:55:48.749Z\"\n    },\n    {\n        \"player_id\": \"1f159bab-923a-4811-b6fa-02bfde50925a\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"21d52455-6c2c-4ee4-8673-ab46b4b926b4\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"27c68d7f-5e40-4afa-8b6f-9df47b79e7dd\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"5ca7e854-dc00-4955-9235-d7fcd732ddcf\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"63df8701-1871-4987-87d7-b55d4f1df2e9\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T22:10:51.203Z\"\n    },\n    {\n        \"player_id\": \"75f9d874-5e69-438d-900d-a3fcb1d429b3\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:10:40.842Z\"\n    },\n    {\n        \"player_id\": \"80e474a3-7d2b-431d-8192-2f1e27162607\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-12T20:25:34.306Z\",\n        \"valid_until\": \"2020-08-12T20:40:36.879Z\"\n    },\n    {\n        \"player_id\": \"a1ed3396-114a-40bc-9ff0-54d7e1ad1718\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T20:55:38.256Z\"\n    },\n    {\n        \"player_id\": \"bf6a24d1-4e89-4790-a4ba-eeb2870cbf6f\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:40:45.977Z\"\n    },\n    {\n        \"player_id\": \"e16c3f28-eecd-4571-be1a-606bbac36b2b\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T20:55:38.256Z\"\n    },\n    {\n        \"player_id\": \"e4034192-4dc6-4901-bb30-07fe3cf77b5e\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"ea44bd36-65b4-4f3b-ac71-78d87a540b48\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:40:45.977Z\"\n    },\n    {\n        \"player_id\": \"f741dc01-2bae-4459-bfc0-f97536193eea\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    }\n]"
                    }
                  ]
                },
                {
                  "name": "playerIdsByName: Invalid Player",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "pm.test(\"Expected no results\", function () {\r",
                          "    var jsonData = pm.response.json();\r",
                          "    pm.expect(jsonData.length).to.eql(0);\r",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/playerIdsByName?name=Fakey McFakeName&current=true",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "playerIdsByName"],
                      "query": [
                        {
                          "key": "name",
                          "value": "Fakey McFakeName",
                          "description": "The name of the player"
                        },
                        {
                          "key": "current",
                          "value": "true",
                          "description": "If true, only players currently using this name will be returned"
                        }
                      ]
                    },
                    "description": "Get all player IDs matching a given name"
                  },
                  "response": [
                    {
                      "name": "Wyatt Mason",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v1/playerIdsByName?name=Wyatt Mason&current=false",
                          "host": ["{{baseUrl}}"],
                          "path": ["v1", "playerIdsByName"],
                          "query": [
                            {
                              "key": "name",
                              "value": "Wyatt Mason",
                              "description": "The name of the player"
                            },
                            {
                              "key": "current",
                              "value": "false",
                              "description": "If true, only players currently using this name will be returned"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Server",
                          "value": "nginx/1.19.1"
                        },
                        {
                          "key": "Date",
                          "value": "Sat, 28 Nov 2020 03:56:02 GMT"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8"
                        },
                        {
                          "key": "Content-Length",
                          "value": "2431"
                        },
                        {
                          "key": "Connection",
                          "value": "keep-alive"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "Express"
                        },
                        {
                          "key": "Access-Control-Allow-Origin",
                          "value": "*"
                        },
                        {
                          "key": "ETag",
                          "value": "W/\"97f-LVEvqdJXFDbfuURjGB1yAmWRUkY\""
                        }
                      ],
                      "cookie": [],
                      "body": "[\n    {\n        \"player_id\": \"0bb35615-63f2-4492-80ec-b6b322dc5450\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"0d5300f6-0966-430f-903f-a4c2338abf00\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:55:48.749Z\"\n    },\n    {\n        \"player_id\": \"1f159bab-923a-4811-b6fa-02bfde50925a\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"21d52455-6c2c-4ee4-8673-ab46b4b926b4\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"27c68d7f-5e40-4afa-8b6f-9df47b79e7dd\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"5ca7e854-dc00-4955-9235-d7fcd732ddcf\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"63df8701-1871-4987-87d7-b55d4f1df2e9\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T22:10:51.203Z\"\n    },\n    {\n        \"player_id\": \"75f9d874-5e69-438d-900d-a3fcb1d429b3\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:10:40.842Z\"\n    },\n    {\n        \"player_id\": \"80e474a3-7d2b-431d-8192-2f1e27162607\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-12T20:25:34.306Z\",\n        \"valid_until\": \"2020-08-12T20:40:36.879Z\"\n    },\n    {\n        \"player_id\": \"a1ed3396-114a-40bc-9ff0-54d7e1ad1718\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T20:55:38.256Z\"\n    },\n    {\n        \"player_id\": \"bf6a24d1-4e89-4790-a4ba-eeb2870cbf6f\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:40:45.977Z\"\n    },\n    {\n        \"player_id\": \"e16c3f28-eecd-4571-be1a-606bbac36b2b\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T20:55:38.256Z\"\n    },\n    {\n        \"player_id\": \"e4034192-4dc6-4901-bb30-07fe3cf77b5e\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    },\n    {\n        \"player_id\": \"ea44bd36-65b4-4f3b-ac71-78d87a540b48\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:40:45.977Z\"\n    },\n    {\n        \"player_id\": \"f741dc01-2bae-4459-bfc0-f97536193eea\",\n        \"player_name\": \"Wyatt Mason\",\n        \"valid_from\": \"2020-08-09T19:27:41.958Z\",\n        \"valid_until\": \"2020-08-12T21:25:43.399Z\"\n    }\n]"
                    }
                  ]
                }
              ]
            },
            {
              "name": "deceased",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v1/deceased",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "deceased"]
                },
                "description": "Get all currently decieased players"
              },
              "response": [
                {
                  "name": "Array of player objects",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/deceased",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "deceased"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "taggedPlayers",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"More than 5 tagged players\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.length).greaterThan(5);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v1/taggedPlayers",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "taggedPlayers"]
                },
                "description": "Get the list of all players currently tagged with some kind of modification (like SHELLED)"
              },
              "response": [
                {
                  "name": "array of player information including current team id/nickname",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/taggedPlayers",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "taggedPlayers"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "allPlayers (no shadows)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "\r",
                      "pm.test(\"Greater than 200 players\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.length).greaterThan(200);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v1/allPlayers?includeShadows=false",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "allPlayers"],
                  "query": [
                    {
                      "key": "includeShadows",
                      "value": "false",
                      "description": "whether to include players in the Shadows"
                    }
                  ]
                },
                "description": "Get the current list of all known players"
              },
              "response": [
                {
                  "name": "list of players",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/allPlayers?includeShadows=<boolean>",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "allPlayers"],
                      "query": [
                        {
                          "key": "includeShadows",
                          "value": "<boolean>"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "allPlayersForGameday S10D10",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Should get >300 players for S10D10\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.length).greaterThan(300);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v1/allPlayersForGameday?season=10&day=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "allPlayersForGameday"],
                  "query": [
                    {
                      "key": "season",
                      "value": "10",
                      "description": "Season to query (zero-indexed)"
                    },
                    {
                      "key": "day",
                      "value": "10",
                      "description": "Day to query (zero-indexed)"
                    }
                  ]
                },
                "description": "Get the list of all players and their data as of a specific Season and Gameday"
              },
              "response": [
                {
                  "name": "array of player information including current team id/nickname",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/allPlayersForGameday?season=<number>&day=<number>",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "allPlayersForGameday"],
                      "query": [
                        {
                          "key": "season",
                          "value": "<number>"
                        },
                        {
                          "key": "day",
                          "value": "<number>"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Statistics",
          "item": [
            {
              "name": "Get the season leaders for a given category and stat",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Your test name\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.length).to.eql(10);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v1/seasonLeaders?season=9&category=batting&stat=home_runs&order=DESC&limit=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "seasonLeaders"],
                  "query": [
                    {
                      "key": "season",
                      "value": "9",
                      "description": "Season to query (zero-indexed)"
                    },
                    {
                      "key": "category",
                      "value": "batting",
                      "description": "Stat category (batting, pitching, running, or fielding)"
                    },
                    {
                      "key": "stat",
                      "value": "home_runs",
                      "description": "Stat to get the leaders for (as returned from /playerStats)"
                    },
                    {
                      "key": "order",
                      "value": "DESC",
                      "description": "Ordering to use for ranking (ASC or DESC)"
                    },
                    {
                      "key": "limit",
                      "value": "10",
                      "description": "Number of leaders to return"
                    }
                  ]
                },
                "description": "Get the season leaders for a given category and stat"
              },
              "response": [
                {
                  "name": "list of leaders",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/seasonLeaders?season=<number>&category=<string>&stat=<string>&order=<string>&limit=<number>",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "seasonLeaders"],
                      "query": [
                        {
                          "key": "season",
                          "value": "<number>"
                        },
                        {
                          "key": "category",
                          "value": "<string>"
                        },
                        {
                          "key": "stat",
                          "value": "<string>"
                        },
                        {
                          "key": "order",
                          "value": "<string>"
                        },
                        {
                          "key": "limit",
                          "value": "<number>"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Get categorical statistics for the given players",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Exactly 1 result\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.length).to.eql(1);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v1/playerStats?category=batting&season=9&playerIds=740d5fef-d59f-4dac-9a75-739ec07f91cf",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "playerStats"],
                  "query": [
                    {
                      "key": "category",
                      "value": "batting",
                      "description": "either 'batting' or 'pitching'"
                    },
                    {
                      "key": "season",
                      "value": "9",
                      "description": "(optional) season to get stats for"
                    },
                    {
                      "key": "playerIds",
                      "value": "740d5fef-d59f-4dac-9a75-739ec07f91cf",
                      "description": "comma-separated list of player IDs"
                    }
                  ]
                },
                "description": "Get performance statistics for a given list of players"
              },
              "response": [
                {
                  "name": "list of player statistics",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/playerStats?category=<string>&season=<number>&playerIds=<string>",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "playerStats"],
                      "query": [
                        {
                          "key": "category",
                          "value": "<string>"
                        },
                        {
                          "key": "season",
                          "value": "<number>"
                        },
                        {
                          "key": "playerIds",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "Teams",
          "item": [
            {
              "name": "currentRoster",
              "item": [
                {
                  "name": "currentRoster by teamId",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [""],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/currentRoster?teamId=b024e975-1c4a-4575-8936-a3754a08806a",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "currentRoster"],
                      "query": [
                        {
                          "key": "teamId",
                          "value": "b024e975-1c4a-4575-8936-a3754a08806a",
                          "description": "The ID of the team (takes precedence if slug is given)"
                        },
                        {
                          "key": "slug",
                          "value": "<string>",
                          "description": "The slug of the team",
                          "disabled": true
                        }
                      ]
                    },
                    "description": "Get the current roster for a given team, using either ID or slug."
                  },
                  "response": [
                    {
                      "name": "array of roster information",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v1/currentRoster?teamId=<string>&slug=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": ["v1", "currentRoster"],
                          "query": [
                            {
                              "key": "teamId",
                              "value": "<string>"
                            },
                            {
                              "key": "slug",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "currentRoster by slug",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/currentRoster?slug=steaks",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "currentRoster"],
                      "query": [
                        {
                          "key": "teamId",
                          "value": "<string>",
                          "description": "The ID of the team (takes precedence if slug is given)",
                          "disabled": true
                        },
                        {
                          "key": "slug",
                          "value": "steaks",
                          "description": "The slug of the team"
                        }
                      ]
                    },
                    "description": "Get the current roster for a given team, using either ID or slug."
                  },
                  "response": [
                    {
                      "name": "array of roster information",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/v1/currentRoster?teamId=<string>&slug=<string>",
                          "host": ["{{baseUrl}}"],
                          "path": ["v1", "currentRoster"],
                          "query": [
                            {
                              "key": "teamId",
                              "value": "<string>"
                            },
                            {
                              "key": "slug",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [""]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"More than one player\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.length).greaterThan(1);",
                      "});"
                    ]
                  }
                }
              ]
            },
            {
              "name": "allTeams",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "\r",
                      "pm.test(\"More than 36 teams\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.length).greaterThan(36);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v1/allTeams",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "allTeams"]
                },
                "description": "Get all current teams"
              },
              "response": [
                {
                  "name": "list of current teams",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/allTeams",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "allTeams"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "allTeamStars",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "\r",
                      "pm.test(\"More than 36 teams\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.length).greaterThan(36);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v1/allTeamStars",
                  "host": ["{{baseUrl}}"],
                  "path": ["v1", "allTeamStars"]
                },
                "description": "Get current star values for all teams"
              },
              "response": [
                {
                  "name": "list of current team stars",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v1/allTeamStars",
                      "host": ["{{baseUrl}}"],
                      "path": ["v1", "allTeamStars"]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "v2",
      "item": [
        {
          "name": "Teams",
          "item": [
            {
              "name": "/teams",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"should respond with 20 teams for season 7\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.length).to.equal(20);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "pm.collectionVariables.set(\"season\", \"7\");",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v2/teams?season={{season}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "teams"],
                  "query": [
                    {
                      "key": "season",
                      "value": "{{season}}",
                      "description": "The (0-indexed) Blaseball season (or `current` for current season)"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Numbered Season Teams",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v2/teams?season=7",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "teams"],
                      "query": [
                        {
                          "key": "season",
                          "value": "7",
                          "description": "The (0-indexed) Blaseball season (or `current` for current season)"
                        }
                      ]
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "html",
                  "header": [
                    {
                      "key": "X-Powered-By",
                      "value": "Express"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Content-Security-Policy",
                      "value": "default-src 'none'"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "Content-Type",
                      "value": "text/html; charset=utf-8"
                    },
                    {
                      "key": "Content-Length",
                      "value": "150"
                    },
                    {
                      "key": "Date",
                      "value": "Sat, 20 Feb 2021 18:32:44 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Keep-Alive",
                      "value": "timeout=5"
                    }
                  ],
                  "cookie": [],
                  "body": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>Error</title>\n    </head>\n    <body>\n        <pre>Cannot GET /v1/v2/teams</pre>\n    </body>\n</html>"
                },
                {
                  "name": "Current Season Teams",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/v2/teams?season=current",
                      "host": ["{{baseUrl}}"],
                      "path": ["v2", "teams"],
                      "query": [
                        {
                          "key": "season",
                          "value": "current",
                          "description": "The (0-indexed) Blaseball season (or `current` for current season)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "X-Powered-By",
                      "value": "Express"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "key": "Content-Length",
                      "value": "13019"
                    },
                    {
                      "key": "ETag",
                      "value": "W/\"32db-3HelBESZuv/pvWlTIlGOxnPbQl4\""
                    },
                    {
                      "key": "Date",
                      "value": "Sat, 20 Feb 2021 19:01:41 GMT"
                    },
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Keep-Alive",
                      "value": "timeout=5"
                    }
                  ],
                  "cookie": [],
                  "body": "[\n    {\n        \"team_id\": \"105bc3ff-1320-4e37-8ef0-8d595cb95dd0\",\n        \"location\": \"Seattle\",\n        \"nickname\": \"Garages\",\n        \"full_name\": \"Seattle Garages\",\n        \"team_abbreviation\": \"SEA\",\n        \"url_slug\": \"garages\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-20T19:15:35.880Z\",\n        \"valid_until\": \"2020-09-27T01:24:03.154Z\",\n        \"gameday_from\": null,\n        \"season_from\": 6,\n        \"division\": \"Mild High\",\n        \"division_id\": \"456089f0-f338-4620-a014-9540868789c9\",\n        \"league\": \"Mild\",\n        \"league_id\": \"4fe65afa-804f-4bb2-9b15-1281b2eab110\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_DONOR\",\n            \"SHAME_PIT\"\n        ],\n        \"team_main_color\": \"#2b4075\",\n        \"team_secondary_color\": \"#5a83ea\",\n        \"team_slogan\": \"Smells like Team Spirit.\",\n        \"team_emoji\": \"0x1F3B8\"\n    },\n    {\n        \"team_id\": \"23e4cbc1-e9cd-47fa-a35b-bfa06f726cb7\",\n        \"location\": \"Philly\",\n        \"nickname\": \"Pies\",\n        \"full_name\": \"Philly Pies\",\n        \"team_abbreviation\": \"PIES\",\n        \"url_slug\": \"pies\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-06T19:00:36.117Z\",\n        \"valid_until\": \"2020-09-27T19:00:06.043Z\",\n        \"gameday_from\": null,\n        \"season_from\": 4,\n        \"division\": \"Mild Low\",\n        \"division_id\": \"fadc9684-45b3-47a6-b647-3be3f0735a84\",\n        \"league\": \"Mild\",\n        \"league_id\": \"4fe65afa-804f-4bb2-9b15-1281b2eab110\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_THIEF\"\n        ],\n        \"team_main_color\": \"#399d8f\",\n        \"team_secondary_color\": \"#58c3b4\",\n        \"team_slogan\": \"Pie or Die.\",\n        \"team_emoji\": \"0x1F967\"\n    },\n    {\n        \"team_id\": \"36569151-a2fb-43c1-9df7-2df512424c82\",\n        \"location\": \"New York\",\n        \"nickname\": \"Millennials\",\n        \"full_name\": \"New York Millennials\",\n        \"team_abbreviation\": \"NYM\",\n        \"url_slug\": \"millennials\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-20T19:15:35.880Z\",\n        \"valid_until\": \"2020-09-27T01:24:03.154Z\",\n        \"gameday_from\": null,\n        \"season_from\": 6,\n        \"division\": \"Wild High\",\n        \"division_id\": \"d4cc18de-a136-4271-84f1-32516be91a80\",\n        \"league\": \"Wild\",\n        \"league_id\": \"aabc11a1-81af-4036-9f18-229c759ca8a9\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_PITY\",\n            \"SHAME_PIT\"\n        ],\n        \"team_main_color\": \"#ffd4d8\",\n        \"team_secondary_color\": \"#ffd4d8\",\n        \"team_slogan\": \"Youth Will Save Us\",\n        \"team_emoji\": \"0x1F4F1\"\n    },\n    {\n        \"team_id\": \"3f8bbb15-61c0-4e3f-8e4a-907a5fb1565e\",\n        \"location\": \"Boston\",\n        \"nickname\": \"Flowers\",\n        \"full_name\": \"Boston Flowers\",\n        \"team_abbreviation\": \"BOS\",\n        \"url_slug\": \"flowers\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-20T19:15:35.880Z\",\n        \"valid_until\": \"2020-09-27T01:24:03.154Z\",\n        \"gameday_from\": null,\n        \"season_from\": 6,\n        \"division\": \"Wild Low\",\n        \"division_id\": \"98c92da4-0ea7-43be-bd75-c6150e184326\",\n        \"league\": \"Wild\",\n        \"league_id\": \"aabc11a1-81af-4036-9f18-229c759ca8a9\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_WINNER\",\n            \"SHAME_PIT\"\n        ],\n        \"team_main_color\": \"#f7d1ff\",\n        \"team_secondary_color\": \"#f7d1ff\",\n        \"team_slogan\": \"Bloom Goes The Dynamite!\",\n        \"team_emoji\": \"0x1F339\"\n    },\n    {\n        \"team_id\": \"57ec08cc-0411-4643-b304-0e80dbc15ac7\",\n        \"location\": \"Mexico City\",\n        \"nickname\": \"Wild Wings\",\n        \"full_name\": \"Mexico City Wild Wings\",\n        \"team_abbreviation\": \"CDMX\",\n        \"url_slug\": \"wild-wings\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-19T19:43:08.648Z\",\n        \"valid_until\": \"2020-10-11T19:00:07.710Z\",\n        \"gameday_from\": 105,\n        \"season_from\": 6,\n        \"division\": \"Mild Low\",\n        \"division_id\": \"fadc9684-45b3-47a6-b647-3be3f0735a84\",\n        \"league\": \"Mild\",\n        \"league_id\": \"4fe65afa-804f-4bb2-9b15-1281b2eab110\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_THIEF\"\n        ],\n        \"team_main_color\": \"#d15700\",\n        \"team_secondary_color\": \"#ee6300\",\n        \"team_slogan\": \"Wings. Beer. Blaseball.\",\n        \"team_emoji\": \"0x1F357\"\n    },\n    {\n        \"team_id\": \"747b8e4a-7e50-4638-a973-ea7950a3e739\",\n        \"location\": \"Hades\",\n        \"nickname\": \"Tigers\",\n        \"full_name\": \"Hades Tigers\",\n        \"team_abbreviation\": \"TGRS\",\n        \"url_slug\": \"tigers\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-20T19:15:35.880Z\",\n        \"valid_until\": \"2020-09-27T01:24:03.154Z\",\n        \"gameday_from\": null,\n        \"season_from\": 6,\n        \"division\": \"Mild High\",\n        \"division_id\": \"456089f0-f338-4620-a014-9540868789c9\",\n        \"league\": \"Mild\",\n        \"league_id\": \"4fe65afa-804f-4bb2-9b15-1281b2eab110\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_DONOR\",\n            \"SHAME_PIT\"\n        ],\n        \"team_main_color\": \"#5c1c1c\",\n        \"team_secondary_color\": \"#e83622\",\n        \"team_slogan\": \"Never Look Back.\",\n        \"team_emoji\": \"0x1F405\"\n    },\n    {\n        \"team_id\": \"7966eb04-efcc-499b-8f03-d13916330531\",\n        \"location\": \"Yellowstone\",\n        \"nickname\": \"Magic\",\n        \"full_name\": \"Yellowstone Magic\",\n        \"team_abbreviation\": \"YELL\",\n        \"url_slug\": \"magic\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-06T19:00:36.117Z\",\n        \"valid_until\": \"2020-10-11T19:00:07.710Z\",\n        \"gameday_from\": null,\n        \"season_from\": 4,\n        \"division\": \"Mild Low\",\n        \"division_id\": \"fadc9684-45b3-47a6-b647-3be3f0735a84\",\n        \"league\": \"Mild\",\n        \"league_id\": \"4fe65afa-804f-4bb2-9b15-1281b2eab110\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_THIEF\"\n        ],\n        \"team_main_color\": \"#bf0043\",\n        \"team_secondary_color\": \"#f60f63\",\n        \"team_slogan\": \"As Above, So Below\",\n        \"team_emoji\": \"0x2728\"\n    },\n    {\n        \"team_id\": \"878c1bf6-0d21-4659-bfee-916c8314d69c\",\n        \"location\": \"Unlimited\",\n        \"nickname\": \"Tacos\",\n        \"full_name\": \"Unlimited Tacos\",\n        \"team_abbreviation\": \"TACO\",\n        \"url_slug\": \"tacos\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-20T19:15:35.880Z\",\n        \"valid_until\": \"2020-09-27T01:24:03.154Z\",\n        \"gameday_from\": null,\n        \"season_from\": 6,\n        \"division\": \"Wild Low\",\n        \"division_id\": \"98c92da4-0ea7-43be-bd75-c6150e184326\",\n        \"league\": \"Wild\",\n        \"league_id\": \"aabc11a1-81af-4036-9f18-229c759ca8a9\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_WINNER\",\n            \"SHAME_PIT\"\n        ],\n        \"team_main_color\": \"#64376e\",\n        \"team_secondary_color\": \"#b063c1\",\n        \"team_slogan\": \"72° and Infinite\",\n        \"team_emoji\": \"0x1F32E\"\n    },\n    {\n        \"team_id\": \"8d87c468-699a-47a8-b40d-cfb73a5660ad\",\n        \"location\": \"Baltimore\",\n        \"nickname\": \"Crabs\",\n        \"full_name\": \"Baltimore Crabs\",\n        \"team_abbreviation\": \"CRAB\",\n        \"url_slug\": \"crabs\",\n        \"team_current_status\": \"ascended\",\n        \"valid_from\": \"2020-09-20T19:15:35.880Z\",\n        \"valid_until\": \"2020-09-27T01:24:03.154Z\",\n        \"gameday_from\": null,\n        \"season_from\": 6,\n        \"division\": \"Wild High\",\n        \"division_id\": \"d4cc18de-a136-4271-84f1-32516be91a80\",\n        \"league\": \"Wild\",\n        \"league_id\": \"aabc11a1-81af-4036-9f18-229c759ca8a9\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_PITY\",\n            \"SHAME_PIT\"\n        ],\n        \"team_main_color\": \"#593037\",\n        \"team_secondary_color\": \"#b05c6b\",\n        \"team_slogan\": \"Claws Up!\",\n        \"team_emoji\": \"0x1F980\"\n    },\n    {\n        \"team_id\": \"979aee4a-6d80-4863-bf1c-ee1a78e06024\",\n        \"location\": \"Hawaii\",\n        \"nickname\": \"Fridays\",\n        \"full_name\": \"Hawaii Fridays\",\n        \"team_abbreviation\": \"FRI\",\n        \"url_slug\": \"fridays\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-12T23:23:48.074Z\",\n        \"valid_until\": \"2020-10-08T17:44:21.421Z\",\n        \"gameday_from\": 109,\n        \"season_from\": 5,\n        \"division\": \"Mild Low\",\n        \"division_id\": \"fadc9684-45b3-47a6-b647-3be3f0735a84\",\n        \"league\": \"Mild\",\n        \"league_id\": \"4fe65afa-804f-4bb2-9b15-1281b2eab110\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_THIEF\"\n        ],\n        \"team_main_color\": \"#3ee652\",\n        \"team_secondary_color\": \"#3ee652\",\n        \"team_slogan\": \"It's Island Time!\",\n        \"team_emoji\": \"0x1F3DD\"\n    },\n    {\n        \"team_id\": \"9debc64f-74b7-4ae1-a4d6-fce0144b6ea5\",\n        \"location\": \"Houston\",\n        \"nickname\": \"Spies\",\n        \"full_name\": \"Houston Spies\",\n        \"team_abbreviation\": \"SPY\",\n        \"url_slug\": \"spies\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-20T19:15:35.880Z\",\n        \"valid_until\": \"2020-09-27T01:24:03.154Z\",\n        \"gameday_from\": null,\n        \"season_from\": 6,\n        \"division\": \"Wild Low\",\n        \"division_id\": \"98c92da4-0ea7-43be-bd75-c6150e184326\",\n        \"league\": \"Wild\",\n        \"league_id\": \"aabc11a1-81af-4036-9f18-229c759ca8a9\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_WINNER\",\n            \"SHAME_PIT\"\n        ],\n        \"team_main_color\": \"#67556b\",\n        \"team_secondary_color\": \"#9e82a4\",\n        \"team_slogan\": \"Bang BANG\",\n        \"team_emoji\": \"0x1F575\"\n    },\n    {\n        \"team_id\": \"a37f9158-7f82-46bc-908c-c9e2dda7c33b\",\n        \"location\": \"Breckenridge\",\n        \"nickname\": \"Jazz Hands\",\n        \"full_name\": \"Breckenridge Jazz Hands\",\n        \"team_abbreviation\": \"JAZZ\",\n        \"url_slug\": \"jazz-hands\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-20T19:15:35.880Z\",\n        \"valid_until\": \"2020-09-27T01:24:03.154Z\",\n        \"gameday_from\": null,\n        \"season_from\": 6,\n        \"division\": \"Wild High\",\n        \"division_id\": \"d4cc18de-a136-4271-84f1-32516be91a80\",\n        \"league\": \"Wild\",\n        \"league_id\": \"aabc11a1-81af-4036-9f18-229c759ca8a9\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_PITY\",\n            \"SHAME_PIT\"\n        ],\n        \"team_main_color\": \"#6388ad\",\n        \"team_secondary_color\": \"#7ba9d7\",\n        \"team_slogan\": \"We’ve Got Winning to Do. Just for You.\",\n        \"team_emoji\": \"0x1F450\"\n    },\n    {\n        \"team_id\": \"adc5b394-8f76-416d-9ce9-813706877b84\",\n        \"location\": \"Kansas City\",\n        \"nickname\": \"Breath Mints\",\n        \"full_name\": \"Kansas City Breath Mints\",\n        \"team_abbreviation\": \"KCBM\",\n        \"url_slug\": \"breath-mints\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-20T19:15:35.880Z\",\n        \"valid_until\": \"2020-09-27T01:24:03.154Z\",\n        \"gameday_from\": null,\n        \"season_from\": 6,\n        \"division\": \"Mild High\",\n        \"division_id\": \"456089f0-f338-4620-a014-9540868789c9\",\n        \"league\": \"Mild\",\n        \"league_id\": \"4fe65afa-804f-4bb2-9b15-1281b2eab110\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_DONOR\",\n            \"SHAME_PIT\"\n        ],\n        \"team_main_color\": \"#178f55\",\n        \"team_secondary_color\": \"#178f55\",\n        \"team_slogan\": \"Fresh Breath, Here We Come.\",\n        \"team_emoji\": \"0x1F36C\"\n    },\n    {\n        \"team_id\": \"b024e975-1c4a-4575-8936-a3754a08806a\",\n        \"location\": \"Dallas\",\n        \"nickname\": \"Steaks\",\n        \"full_name\": \"Dallas Steaks\",\n        \"team_abbreviation\": \"STK\",\n        \"url_slug\": \"steaks\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-20T19:15:35.880Z\",\n        \"valid_until\": \"2020-09-27T01:24:03.154Z\",\n        \"gameday_from\": null,\n        \"season_from\": 6,\n        \"division\": \"Mild High\",\n        \"division_id\": \"456089f0-f338-4620-a014-9540868789c9\",\n        \"league\": \"Mild\",\n        \"league_id\": \"4fe65afa-804f-4bb2-9b15-1281b2eab110\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_DONOR\",\n            \"SHAME_PIT\"\n        ],\n        \"team_main_color\": \"#8c8d8f\",\n        \"team_secondary_color\": \"#b2b3b5\",\n        \"team_slogan\": \"Well Done.\",\n        \"team_emoji\": \"0x1F969\"\n    },\n    {\n        \"team_id\": \"b63be8c2-576a-4d6e-8daf-814f8bcea96f\",\n        \"location\": \"Miami\",\n        \"nickname\": \"Dale\",\n        \"full_name\": \"Miami Dale\",\n        \"team_abbreviation\": \"DALE\",\n        \"url_slug\": \"dale\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-20T19:15:35.880Z\",\n        \"valid_until\": \"2020-09-27T01:24:03.154Z\",\n        \"gameday_from\": null,\n        \"season_from\": 6,\n        \"division\": \"Wild Low\",\n        \"division_id\": \"98c92da4-0ea7-43be-bd75-c6150e184326\",\n        \"league\": \"Wild\",\n        \"league_id\": \"aabc11a1-81af-4036-9f18-229c759ca8a9\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_WINNER\",\n            \"ELECTRIC\",\n            \"LIFE_OF_PARTY\",\n            \"SHAME_PIT\"\n        ],\n        \"team_main_color\": \"#9141ba\",\n        \"team_secondary_color\": \"#cd76fa\",\n        \"team_slogan\": \"¡Dale!\",\n        \"team_emoji\": \"0x1F6A4\"\n    },\n    {\n        \"team_id\": \"b72f3061-f573-40d7-832a-5ad475bd7909\",\n        \"location\": \"San Francisco\",\n        \"nickname\": \"Lovers\",\n        \"full_name\": \"San Francisco Lovers\",\n        \"team_abbreviation\": \"LVRS\",\n        \"url_slug\": \"lovers\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-20T19:15:35.880Z\",\n        \"valid_until\": \"2020-09-27T01:24:03.154Z\",\n        \"gameday_from\": null,\n        \"season_from\": 6,\n        \"division\": \"Wild High\",\n        \"division_id\": \"d4cc18de-a136-4271-84f1-32516be91a80\",\n        \"league\": \"Wild\",\n        \"league_id\": \"aabc11a1-81af-4036-9f18-229c759ca8a9\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_PITY\",\n            \"SHAME_PIT\"\n        ],\n        \"team_main_color\": \"#780018\",\n        \"team_secondary_color\": \"#da0000\",\n        \"team_slogan\": \"Let's Go All The Way!\",\n        \"team_emoji\": \"0x1F48B\"\n    },\n    {\n        \"team_id\": \"bfd38797-8404-4b38-8b82-341da28b1f83\",\n        \"location\": \"Charleston\",\n        \"nickname\": \"Shoe Thieves\",\n        \"full_name\": \"Charleston Shoe Thieves\",\n        \"team_abbreviation\": \"CHST\",\n        \"url_slug\": \"shoe-thieves\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-06T19:00:36.117Z\",\n        \"valid_until\": \"2020-10-11T19:00:07.710Z\",\n        \"gameday_from\": null,\n        \"season_from\": 4,\n        \"division\": \"Mild Low\",\n        \"division_id\": \"fadc9684-45b3-47a6-b647-3be3f0735a84\",\n        \"league\": \"Mild\",\n        \"league_id\": \"4fe65afa-804f-4bb2-9b15-1281b2eab110\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_THIEF\"\n        ],\n        \"team_main_color\": \"#ffce0a\",\n        \"team_secondary_color\": \"#ffce0a\",\n        \"team_slogan\": \"Your Kicks are My Kicks.\",\n        \"team_emoji\": \"0x1F45F\"\n    },\n    {\n        \"team_id\": \"ca3f1c8c-c025-4d8e-8eef-5be6accbeb16\",\n        \"location\": \"Chicago\",\n        \"nickname\": \"Firefighters\",\n        \"full_name\": \"Chicago Firefighters\",\n        \"team_abbreviation\": \"CHI\",\n        \"url_slug\": \"firefighters\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-20T19:15:35.880Z\",\n        \"valid_until\": \"2020-09-27T01:24:03.154Z\",\n        \"gameday_from\": null,\n        \"season_from\": 6,\n        \"division\": \"Wild High\",\n        \"division_id\": \"d4cc18de-a136-4271-84f1-32516be91a80\",\n        \"league\": \"Wild\",\n        \"league_id\": \"aabc11a1-81af-4036-9f18-229c759ca8a9\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_PITY\",\n            \"SHAME_PIT\"\n        ],\n        \"team_main_color\": \"#8c2a3e\",\n        \"team_secondary_color\": \"#d13757\",\n        \"team_slogan\": \"We Are From Chicago\",\n        \"team_emoji\": \"0x1F525\"\n    },\n    {\n        \"team_id\": \"eb67ae5e-c4bf-46ca-bbbc-425cd34182ff\",\n        \"location\": \"Canada\",\n        \"nickname\": \"Moist Talkers\",\n        \"full_name\": \"Canada Moist Talkers\",\n        \"team_abbreviation\": \"CAN\",\n        \"url_slug\": \"moist-talkers\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-20T19:15:35.880Z\",\n        \"valid_until\": \"2020-09-27T01:24:03.154Z\",\n        \"gameday_from\": null,\n        \"season_from\": 6,\n        \"division\": \"Mild High\",\n        \"division_id\": \"456089f0-f338-4620-a014-9540868789c9\",\n        \"league\": \"Mild\",\n        \"league_id\": \"4fe65afa-804f-4bb2-9b15-1281b2eab110\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_DONOR\",\n            \"SHAME_PIT\"\n        ],\n        \"team_main_color\": \"#f5feff\",\n        \"team_secondary_color\": \"#f5feff\",\n        \"team_slogan\": \"SPRAY IT, DON'T SAY IT\",\n        \"team_emoji\": \"0x1F5E3\"\n    },\n    {\n        \"team_id\": \"f02aeae2-5e6a-4098-9842-02d2273f25c7\",\n        \"location\": \"Hellmouth\",\n        \"nickname\": \"Sunbeams\",\n        \"full_name\": \"Hellmouth Sunbeams\",\n        \"team_abbreviation\": \"HELL\",\n        \"url_slug\": \"sunbeams\",\n        \"team_current_status\": \"active\",\n        \"valid_from\": \"2020-09-20T19:15:35.880Z\",\n        \"valid_until\": \"2020-09-27T01:24:03.154Z\",\n        \"gameday_from\": null,\n        \"season_from\": 6,\n        \"division\": \"Wild Low\",\n        \"division_id\": \"98c92da4-0ea7-43be-bd75-c6150e184326\",\n        \"league\": \"Wild\",\n        \"league_id\": \"aabc11a1-81af-4036-9f18-229c759ca8a9\",\n        \"tournament_name\": null,\n        \"modifications\": [\n            \"BLOOD_WINNER\",\n            \"SHAME_PIT\"\n        ],\n        \"team_main_color\": \"#fffbab\",\n        \"team_secondary_color\": \"#fffbab\",\n        \"team_slogan\": \"Stare into the Sun...\",\n        \"team_emoji\": \"0x1F31E\"\n    }\n]"
                }
              ]
            },
            {
              "name": "/teams/:teamIdOrSlug",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "pm.variables.set(\"teamIdOrSlug\", \"8d87c468-699a-47a8-b40d-cfb73a5660ad\");",
                      "pm.variables.set(\"season\", \"7\");"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"should respond with season 7 data for Baltimore Crabs\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.nickname).to.equal(\"Crabs\");",
                      "    pm.expect(jsonData.season_from).to.equal(6);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v2/teams/{{teamIdOrSlug}}?season={{season}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "teams", "{{teamIdOrSlug}}"],
                  "query": [
                    {
                      "key": "season",
                      "value": "{{season}}",
                      "description": "The (0-indexed) Blaseball season (or `current` for current season)"
                    }
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Team Stats",
          "item": [
            {
              "name": "/stats/teams?type=season&season=14",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"should respond with 2 stat groups\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.length).to.equal(2);",
                      "});",
                      "",
                      "pm.test(\"should include 24 splits for hitting group\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var hittingGroup = jsonData.find(function (statGroup) {",
                      "        return statGroup.group === 'hitting';",
                      "    });",
                      "    pm.expect(hittingGroup.totalSplits).to.equal(24);",
                      "});",
                      "",
                      "pm.test(\"should include 24 splits for pitching group\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var pitchingGroup = jsonData.find(function (statGroup) {",
                      "        return statGroup.group === 'pitching';",
                      "    });",
                      "    pm.expect(pitchingGroup.totalSplits).to.equal(24);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v2/stats/teams?type=season&gameType=R&group=pitching,hitting&season=14",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "stats", "teams"],
                  "query": [
                    {
                      "key": "fields",
                      "value": "triples",
                      "description": "The stat fields to return (e.g. `strikeouts,home_runs` or `home_runs`)",
                      "disabled": true
                    },
                    {
                      "key": "sortStat",
                      "value": "",
                      "description": "The stat field to sort on",
                      "disabled": true
                    },
                    {
                      "key": "order",
                      "value": "",
                      "description": "The order of the sorted stat field (`asc` or `desc`)",
                      "disabled": true
                    },
                    {
                      "key": "sortStat",
                      "value": "",
                      "description": "The ID of a team to retrieve player stats for",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "",
                      "description": "The number of rows to return for each field (e.g. `5`",
                      "disabled": true
                    },
                    {
                      "key": "type",
                      "value": "season"
                    },
                    {
                      "key": "gameType",
                      "value": "R"
                    },
                    {
                      "key": "group",
                      "value": "pitching,hitting"
                    },
                    {
                      "key": "season",
                      "value": "14"
                    }
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Players",
          "item": [
            {
              "name": "/players",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": ["pm.collectionVariables.set(\"season\", \"7\");"],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"should respond with 20 players for season 7\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.length).to.equal(573);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v2/players?season={{season}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "players"],
                  "query": [
                    {
                      "key": "season",
                      "value": "{{season}}"
                    },
                    {
                      "key": "playerPool",
                      "value": "deceased",
                      "disabled": true
                    },
                    {
                      "key": "sortField",
                      "value": "anticapitalism",
                      "disabled": true
                    },
                    {
                      "key": "order",
                      "value": "desc",
                      "disabled": true
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "/players/:playerIdOrSlug",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "pm.collectionVariables.set(\"playerIdOrSlug\", \"dominic-marijuana\");"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"should respond with Dominic Marijuana's data\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.player_id).to.equal(\"7310c32f-8f32-40f2-b086-54555a2c0e86\");",
                      "    pm.expect(jsonData.debut_season).to.equal(2);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v2/players/:playerIdOrSlug",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "players", ":playerIdOrSlug"],
                  "variable": [
                    {
                      "key": "playerIdOrSlug",
                      "value": "{{playerIdOrSlug}}",
                      "description": "A player's ID or URL slug"
                    }
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Player Stats",
          "item": [
            {
              "name": "/stats?type=career",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"should respond with 2 stat groups\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.length).to.equal(2);",
                      "});",
                      "",
                      "pm.test(\"should include at least 286 splits for hitting group\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var hittingGroup = jsonData.find(function (statGroup) {",
                      "        return statGroup.group === 'hitting';",
                      "    });",
                      "    pm.expect(hittingGroup.totalSplits).to.be.gte(286);",
                      "});",
                      "",
                      "pm.test(\"should include at least 139 splits for pitching group\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var pitchingGroup = jsonData.find(function (statGroup) {",
                      "        return statGroup.group === 'pitching';",
                      "    });",
                      "    pm.expect(pitchingGroup.totalSplits).to.be.gte(139);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v2/stats?type=career&group=hitting,pitching",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "stats"],
                  "query": [
                    {
                      "key": "type",
                      "value": "career",
                      "description": "The type of stat split (defaults to `season`)"
                    },
                    {
                      "key": "group",
                      "value": "hitting,pitching",
                      "description": "The stat groups to return (e.g. `hitting,pitching` or `hitting`)"
                    },
                    {
                      "key": "fields",
                      "value": "triples",
                      "description": "The stat fields to return (e.g. `strikeouts,home_runs` or `home_runs`)",
                      "disabled": true
                    },
                    {
                      "key": "season",
                      "value": "10",
                      "description": "The (0-indexed) Blaseball season (or `current` for current season)",
                      "disabled": true
                    },
                    {
                      "key": "gameType",
                      "value": "",
                      "description": "The type of game (e.g. `R` for regular season, `P` for postseason",
                      "disabled": true
                    },
                    {
                      "key": "sortStat",
                      "value": "",
                      "description": "The stat field to sort on",
                      "disabled": true
                    },
                    {
                      "key": "order",
                      "value": "",
                      "description": "The order of the sorted stat field (`asc` or `desc`)",
                      "disabled": true
                    },
                    {
                      "key": "playerId",
                      "value": "",
                      "description": "The ID of a player",
                      "disabled": true
                    },
                    {
                      "key": "teamId",
                      "value": "",
                      "description": "The ID of a team to retrieve player stats for",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "",
                      "description": "The number of rows to return for each field (e.g. `5`",
                      "disabled": true
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "/stats?type=season&season=10",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"should respond with 2 stat groups\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.length).to.equal(2);",
                      "});",
                      "",
                      "pm.test(\"should include 227 splits for hitting group\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var hittingGroup = jsonData.find(function (statGroup) {",
                      "        return statGroup.group === 'hitting';",
                      "    });",
                      "    pm.expect(hittingGroup.totalSplits).to.equal(227);",
                      "});",
                      "",
                      "pm.test(\"should include 100 splits for pitching group\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var pitchingGroup = jsonData.find(function (statGroup) {",
                      "        return statGroup.group === 'pitching';",
                      "    });",
                      "    pm.expect(pitchingGroup.totalSplits).to.equal(100);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v2/stats?type=season&group=hitting,pitching&season=10",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "stats"],
                  "query": [
                    {
                      "key": "type",
                      "value": "season",
                      "description": "The type of stat split (defaults to `season`)"
                    },
                    {
                      "key": "fields",
                      "value": "triples",
                      "description": "The stat fields to return (e.g. `strikeouts,home_runs` or `home_runs`)",
                      "disabled": true
                    },
                    {
                      "key": "gameType",
                      "value": "",
                      "description": "The type of game (e.g. `R` for regular season, `P` for postseason",
                      "disabled": true
                    },
                    {
                      "key": "sortStat",
                      "value": "",
                      "description": "The stat field to sort on",
                      "disabled": true
                    },
                    {
                      "key": "order",
                      "value": "",
                      "description": "The order of the sorted stat field (`asc` or `desc`)",
                      "disabled": true
                    },
                    {
                      "key": "playerId",
                      "value": "",
                      "description": "The ID of a player",
                      "disabled": true
                    },
                    {
                      "key": "teamId",
                      "value": "",
                      "description": "The ID of a team to retrieve player stats for",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "",
                      "description": "The number of rows to return for each field (e.g. `5`",
                      "disabled": true
                    },
                    {
                      "key": "group",
                      "value": "hitting,pitching"
                    },
                    {
                      "key": "season",
                      "value": "10"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "/stats/leaders",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"should respond with 2 stat groups\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.length).to.equal(2);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v2/stats/leaders?group=hitting,pitching",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "stats", "leaders"],
                  "query": [
                    {
                      "key": "group",
                      "value": "hitting,pitching",
                      "description": "The stat groups to return (e.g. `hitting,pitching` or `hitting`)"
                    },
                    {
                      "key": "season",
                      "value": null,
                      "description": "The (0-indexed) Blaseball season (or `current` for current season)",
                      "disabled": true
                    },
                    {
                      "key": "type",
                      "value": "",
                      "description": "The type of leader results to return (e.g. `season` or `career`)",
                      "disabled": true
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "/stats/leaders&type=career",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"should respond with 2 stat groups\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.length).to.equal(2);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/v2/stats/leaders?group=hitting,pitching&type=career",
                  "host": ["{{baseUrl}}"],
                  "path": ["v2", "stats", "leaders"],
                  "query": [
                    {
                      "key": "group",
                      "value": "hitting,pitching",
                      "description": "The stat groups to return (e.g. `hitting,pitching` or `hitting`)"
                    },
                    {
                      "key": "season",
                      "value": null,
                      "description": "The (0-indexed) Blaseball season (or `current` for current season)",
                      "disabled": true
                    },
                    {
                      "key": "type",
                      "value": "career",
                      "description": "The type of leader results to return (e.g. `season` or `career`)"
                    }
                  ]
                }
              },
              "response": []
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "pm.test(\"Status code is 200\", function () {",
          "    pm.response.to.have.status(200);",
          "});",
          "",
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "87fb23e8-4cd5-4e9e-9df6-7870068d977e",
      "key": "baseUrl",
      "value": "https://api.sibr.dev/datablase"
    },
    {
      "id": "d398360c-6f63-4296-9c53-36aad03b9f97",
      "key": "season",
      "value": "7"
    },
    {
      "id": "85a2b506-0653-4a15-8cc0-6d3ebbfd9f03",
      "key": "playerIdOrSlug",
      "value": "dominic-marijuana"
    }
  ]
}
